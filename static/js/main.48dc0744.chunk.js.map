{"version":3,"sources":["app/Code.module.css","app/Code.tsx","app/App.tsx","index.tsx","app/App.module.css"],"names":["module","exports","Code","props","title","lang","code","useState","isCopy","setIsCopy","html","setHtml","useEffect","Prism","highlight","languages","swift","csharp","objectivec","className","styles","warpper","tool","copy","copied","onClick","copyTextToClipboard","timer","setTimeout","clearTimeout","dangerouslySetInnerHTML","__html","App","r","g","b","a","color","setColor","style","backgroundColor","header","onChange","data","rgb","footer","href","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48dc0744.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"warpper\":\"Code_warpper__2mCiy\",\"code\":\"Code_code__mr2IY\",\"tool\":\"Code_tool__21PhO\",\"copy\":\"Code_copy__Ebzgd\",\"copied\":\"Code_copied__3zCtr\",\"title\":\"Code_title__3AVdb\"};","import copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { useEffect, useState } from 'react';\nimport Prism from 'prismjs';\nimport 'prismjs/components/prism-csharp';\nimport 'prismjs/components/prism-swift';\nimport 'prismjs/components/prism-c';\nimport 'prismjs/components/prism-objectivec';\nimport styles from './Code.module.css';\nimport './prism.css';\n\ntype CodeProps = {\n  title: string;\n  lang: string;\n  code: string;\n}\n\nexport default function Code(props: CodeProps) {\n  const { title, lang, code } = props || {}\n  const [isCopy, setIsCopy] = useState(false)\n  const [html, setHtml] = useState('')\n  function copyHandle() {\n    setIsCopy(true)\n    copyTextToClipboard(code || '', (isCopy) => {\n      let timer = setTimeout(() => {\n        setIsCopy(false)\n        clearTimeout(timer)\n      }, 1000)\n    });\n  }\n  useEffect(() => {\n    let html = ''\n    if (lang == 'swift') {\n      html = Prism.highlight(code, Prism.languages.swift, 'swift');\n    } else if (lang == 'csharp') {\n      html = Prism.highlight(code, Prism.languages.csharp, 'csharp');\n    } else if (lang == 'objectivec') {\n      html = Prism.highlight(code, Prism.languages.objectivec, 'objectivec');\n    }\n    setHtml(html)\n  }, [code])\n  return (\n    <div className={styles.warpper}>\n      <div className={styles.tool}>\n        <div className={styles.title}>{title}</div>\n        <div className={`${styles.copy} ${isCopy ? styles.copied: ''}`} onClick={copyHandle}>Copy</div>\n      </div>\n      <pre className={styles.code}>\n        <code className={`language-${lang}`} dangerouslySetInnerHTML={{ __html: html}} />\n      </pre>\n    </div>\n  )\n}","import { useRef, useState } from 'react';\nimport { SketchPicker, ColorResult, RGBColor } from 'react-color'\nimport styles from './App.module.css'\nimport Code from './Code'\n\nexport default function App() {\n  const [color, setColor] = useState<RGBColor>({r: 224, g: 224, b: 224, a: 0.61})\n  const handleColorChange = (data: ColorResult) => {\n    setColor(data.rgb)\n  }\n\n  return (\n    <div\n      style={{\n        backgroundColor: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`\n      }}\n    >\n      <div className={styles.header}>\n        <div>\n          <SketchPicker\n            color={color}\n            onChange={handleColorChange}\n          />\n          <div className={styles.footer}>\n            <div>Copyright Â© Color 2021.</div>\n            <div>Developed by <a href=\"https://github.com/uiwjs\" target=\"__blank\">uiw</a>.</div>\n          </div>\n        </div>\n        <div className={styles.code}>\n          <Code lang=\"swift\" title=\"SwiftUI\" code={`Color(red: ${color.r / 100}, green: ${color.g / 100}, blue: ${color.b / 100}).opacity(${color.a})`} />\n          <Code lang=\"swift\" title=\"Swift for iOS\" code={`UIColor(red: ${color.r / 100}, green: ${color.g / 100}, blue: ${color.b / 100}, alpha: ${color.a})`} />\n          <Code lang=\"swift\" title=\"Swift for macOS\" code={`NSColor(red: ${color.r / 100}, green: ${color.g / 100}, blue: ${color.b / 100}, alpha: ${color.a})`} />\n          <Code lang=\"objectivec\" title=\"Objective-C for iOS\" code={`[UIColor colorWithRed: ${color.r / 100} green: ${color.g / 100} blue: ${color.b / 100} alpha: ${color.a}];`} />\n          <Code lang=\"objectivec\" title=\"Objective-C for macOS\" code={`[NSColor colorWithCalibratedRed: ${color.r / 100} green: ${color.g / 100} blue: ${color.b / 100} alpha: ${color.a}];`} />\n          <Code lang=\"csharp\" title=\"Xamarin (C#)\" code={`new UIColor(red: ${color.r / 100}f, green: ${color.g / 100}f, blue: ${color.b / 100}f, alpha: ${color.a}f)`} />\n        </div>\n      </div>\n    </div>\n  )\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__ooUVu\",\"code\":\"App_code__21QIv\",\"footer\":\"App_footer__3uZmK\"};"],"sourceRoot":""}